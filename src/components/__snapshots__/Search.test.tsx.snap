// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Search /> Tests should render correctly and match snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "flex": 1,
      }
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "flex": 1,
          "flexDirection": "row",
        }
      }
    >
      <TextInput
        autoCapitalize="words"
        onChangeText={[Function]}
        onSubmitEditing={[Function]}
        placeholder="Search"
        placeholderTextColor="#A0C2AD"
        returnKeyType="go"
        style={
          {
            "color": "#424242",
            "flex": 1,
          }
        }
        testID="search-input"
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`<Search /> Tests should render correctly and match snapshot with clear button 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "flex": 1,
      }
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "flex": 1,
          "flexDirection": "row",
        }
      }
    >
      <TextInput
        autoCapitalize="words"
        onChangeText={[Function]}
        onSubmitEditing={[Function]}
        placeholder="Search"
        placeholderTextColor="#A0C2AD"
        returnKeyType="go"
        style={
          {
            "color": "#424242",
            "flex": 1,
          }
        }
        testID="search-input"
      />
      <View
        collapsable={false}
        style={
          {
            "alignSelf": undefined,
            "backgroundColor": "transparent",
            "borderRadius": 0,
            "bottom": undefined,
            "end": undefined,
            "flex": undefined,
            "height": 46,
            "left": undefined,
            "margin": 0,
            "opacity": undefined,
            "position": undefined,
            "right": undefined,
            "shadowColor": "#000",
            "shadowOffset": {
              "height": 0,
              "width": 0,
            },
            "shadowOpacity": 0,
            "shadowRadius": 0,
            "start": undefined,
            "top": undefined,
            "transform": undefined,
            "width": 46,
          }
        }
        testID="search-input-clear-button-container-outer-layer"
      >
        <View
          collapsable={false}
          style={
            {
              "backgroundColor": "transparent",
              "borderColor": "rgba(121, 116, 126, 1)",
              "borderRadius": 0,
              "borderWidth": 0,
              "elevation": 0,
              "flex": 1,
              "overflow": "hidden",
              "shadowColor": "#000",
              "shadowOffset": {
                "height": 0,
                "width": 0,
              },
              "shadowOpacity": 0,
              "shadowRadius": 0,
            }
          }
          testID="search-input-clear-button-container"
        >
          <View
            accessibilityComponentType="button"
            accessibilityRole="button"
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": false,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityTraits="button"
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            centered={true}
            collapsable={false}
            focusable={true}
            hitSlop={
              {
                "bottom": 6,
                "left": 6,
                "right": 6,
                "top": 6,
              }
            }
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              [
                {
                  "overflow": "hidden",
                },
                false,
                [
                  {
                    "alignItems": "center",
                    "flexGrow": 1,
                    "justifyContent": "center",
                  },
                  {
                    "borderRadius": 0,
                  },
                ],
              ]
            }
            testID="search-input-clear-button"
          >
            <Text
              accessibilityElementsHidden={true}
              allowFontScaling={false}
              importantForAccessibility="no-hide-descendants"
              pointerEvents="none"
              selectable={false}
              style={
                [
                  {
                    "color": "#424242",
                    "fontSize": 30,
                  },
                  [
                    {
                      "lineHeight": 30,
                      "transform": [
                        {
                          "scaleX": 1,
                        },
                      ],
                    },
                    {
                      "backgroundColor": "transparent",
                    },
                  ],
                  {
                    "fontFamily": "Material Design Icons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              ó°…–
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;
