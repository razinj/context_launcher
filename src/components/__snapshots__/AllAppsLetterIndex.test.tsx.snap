// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<AllAppsLetterIndex /> Tests should render correctly and match snapshot - empty list 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "flex": 1,
      }
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "bottom": 0,
          "flexDirection": "row",
          "justifyContent": "center",
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
      testID="all-apps-letter-index-wrapper"
    >
      <RCTScrollView
        data={[]}
        getItem={[Function]}
        getItemCount={[Function]}
        initialNumToRender={0}
        keyExtractor={[Function]}
        onContentSizeChange={[Function]}
        onLayout={[Function]}
        onMomentumScrollBegin={[Function]}
        onMomentumScrollEnd={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        removeClippedSubviews={false}
        renderItem={[Function]}
        scrollEventThrottle={50}
        stickyHeaderIndices={[]}
        testID="all-apps-letter-index-list"
        viewabilityConfigCallbackPairs={[]}
      >
        <View />
      </RCTScrollView>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`<AllAppsLetterIndex /> Tests should render correctly and match snapshot - populated list 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "flex": 1,
      }
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "bottom": 0,
          "flexDirection": "row",
          "justifyContent": "center",
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
      testID="all-apps-letter-index-wrapper"
    >
      <RCTScrollView
        data={
          [
            {
              "index": 0,
              "letter": "C",
            },
          ]
        }
        getItem={[Function]}
        getItemCount={[Function]}
        initialNumToRender={1}
        keyExtractor={[Function]}
        onContentSizeChange={[Function]}
        onLayout={[Function]}
        onMomentumScrollBegin={[Function]}
        onMomentumScrollEnd={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        removeClippedSubviews={false}
        renderItem={[Function]}
        scrollEventThrottle={50}
        stickyHeaderIndices={[]}
        testID="all-apps-letter-index-list"
        viewabilityConfigCallbackPairs={[]}
      >
        <View>
          <View
            onFocusCapture={[Function]}
            onLayout={[Function]}
            style={null}
          >
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "alignItems": "center",
                  "height": 25,
                  "justifyContent": "center",
                  "width": 25,
                }
              }
            >
              <Text
                style={
                  {
                    "color": "#FFFFFF",
                    "fontSize": 12,
                    "fontWeight": "600",
                    "textShadowColor": "rgba(0, 0, 0, 0.75)",
                    "textShadowRadius": 2.5,
                  }
                }
              >
                C
              </Text>
            </View>
          </View>
        </View>
      </RCTScrollView>
    </View>
  </View>
</RNCSafeAreaProvider>
`;
