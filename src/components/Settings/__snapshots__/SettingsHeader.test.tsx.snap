// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<SettingsHeader /> Tests should not render modal when display settings value is false (default) 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "flex": 1,
      }
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "paddingBottom": 20,
        }
      }
      testID="wrapper"
    >
      <Text
        style={
          {
            "color": "#808080",
            "fontSize": 20,
            "fontWeight": "400",
          }
        }
      >
        Context Settings
        <Text
          style={
            {
              "color": "#ccc",
              "fontSize": 12,
            }
          }
        >
            v
          1.4.8
           (
          12
          )
        </Text>
      </Text>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        testID="settings-header-app-info-button"
      >
        <Text
          allowFontScaling={false}
          selectable={false}
          style={
            [
              {
                "color": "#808080",
                "fontSize": 34,
              },
              undefined,
              {
                "fontFamily": "Material Design Icons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              {},
            ]
          }
        >
          󰋽
        </Text>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`<SettingsHeader /> Tests should render correctly and match snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "flex": 1,
      }
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "paddingBottom": 20,
        }
      }
      testID="wrapper"
    >
      <Text
        style={
          {
            "color": "#808080",
            "fontSize": 20,
            "fontWeight": "400",
          }
        }
      >
        Context Settings
        <Text
          style={
            {
              "color": "#ccc",
              "fontSize": 12,
            }
          }
        >
            v
          1.4.8
           (
          12
          )
        </Text>
      </Text>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        testID="app-info-button"
      >
        <Text
          allowFontScaling={false}
          selectable={false}
          style={
            [
              {
                "color": "#808080",
                "fontSize": 34,
              },
              undefined,
              {
                "fontFamily": "Material Design Icons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              {},
            ]
          }
        >
          󰋽
        </Text>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;
