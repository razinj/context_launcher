// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ToggleSettings /> Tests should render correctly and match snapshot - required and optional props 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "flex": 1,
      }
    }
  >
    <View
      style={
        {
          "borderRadius": 5,
        }
      }
    >
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "space-between",
          }
        }
        testID="toggle-settings-button"
      >
        <View
          style={
            [
              {
                "padding": 10,
              },
              undefined,
            ]
          }
          testID="wrapper"
        >
          <Text
            style={
              [
                {
                  "color": "#808080",
                },
                [],
              ]
            }
            testID="title"
          >
            An item label
          </Text>
          <Text
            style={
              {
                "color": "#ccc",
              }
            }
          >
            An item description
          </Text>
        </View>
        <Text
          allowFontScaling={false}
          selectable={false}
          style={
            [
              {
                "color": "#808080",
                "fontSize": 30,
              },
              undefined,
              {
                "fontFamily": "Material Design Icons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              {},
            ]
          }
        >
          󰅀
        </Text>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`<ToggleSettings /> Tests should render correctly and match snapshot - required props 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "flex": 1,
      }
    }
  >
    <View
      style={
        {
          "borderRadius": 5,
        }
      }
    >
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "space-between",
          }
        }
        testID="toggle-settings-button"
      >
        <View
          style={
            [
              {
                "padding": 10,
              },
              undefined,
            ]
          }
          testID="wrapper"
        >
          <Text
            style={
              [
                {
                  "color": "#808080",
                },
                [],
              ]
            }
            testID="title"
          >
            An item label
          </Text>
        </View>
        <Text
          allowFontScaling={false}
          selectable={false}
          style={
            [
              {
                "color": "#808080",
                "fontSize": 30,
              },
              undefined,
              {
                "fontFamily": "Material Design Icons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              {},
            ]
          }
        >
          󰅀
        </Text>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;
